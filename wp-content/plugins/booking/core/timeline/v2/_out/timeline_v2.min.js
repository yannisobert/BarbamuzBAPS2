"use strict";function wpbc_flextimeline_nav(l,e){jQuery(".wpbc_timeline_front_end").trigger("timeline_nav",[l,e]),jQuery("#"+l.html_client_id+" .flex_tl_prev,#"+l.html_client_id+" .flex_tl_next").remove(),jQuery("#"+l.html_client_id+" .flex_tl_title").html('<span class="glyphicon glyphicon-refresh wpbc_spin"></span> &nbsp Loading...'),jQuery.ajax({url:wpbc_ajaxurl,type:"POST",success:function(e,t){if("success"==t)return jQuery("#"+l.html_client_id+" .wpbc_timeline_ajax_replace").html(e),!0},error:function(e,t,l){window.status="Ajax Error! Status: "+t,alert("Ajax Error! Status: "+e.status+" "+e.statusText)},data:{action:"WPBC_FLEXTIMELINE_NAV",timeline_obj:l,nav_step:e,wpdev_active_locale:wpbc_active_locale,wpbc_nonce:document.getElementById("wpbc_nonce_"+l.html_client_id).value}})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
